{"version":3,"sources":["formatted-text.js"],"names":[],"mappings":"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","file":"dist/forms/formatted-text.js","sourcesContent":["const React = require('react')\nconst cx    = require('classnames')\nconst _     = require('lodash')\n\nconst ObsText = require('./text')\n\nconst ObsFormattedText = React.createClass({\n  propTypes: {\n    object:       React.PropTypes.object.isRequired,\n    attr:         React.PropTypes.string.isRequired,\n    onChange:     React.PropTypes.func,\n    formatter:    React.PropTypes.func.isRequired,\n    onErrorChange:React.PropTypes.func,\n    // field was \"touched\" by user. Requires a change.\n    onTouch:      React.PropTypes.func,\n    errors:       React.PropTypes.array,\n    label:        React.PropTypes.string,\n    hint:         React.PropTypes.string,\n    required:     React.PropTypes.bool,\n    placeholder:  React.PropTypes.string,\n    className:    React.PropTypes.string,\n    id:           React.PropTypes.string,\n  },\n\n  getDefaultProps() {\n    return {\n      required: false,\n      errors:   []\n    }\n  },\n\n  getInitialState() {\n    return _.merge(this.processValue(_.get(this.props.object, this.props.attr)), {userTouched: false})\n  },\n\n  processValue(value) {\n    var val\n    val = this.props.formatter(value)\n    return {\n      value:        val.parsed,\n      formatted:    val.formatted,\n      display:      val.formatted,\n      formatErrors: val.errors\n    }\n  },\n\n  componentDidMount() {\n    // re-assign the same errors, so it will fire the callback. Inform\n    // parent/subscriber that there are initial state formatting errors. No\n    // state actually changes.\n    if (!_.isEmpty(this.state.formatErrors))\n      this.formatErrorsChange(this.state.formatErrors)\n  },\n\n  componentWillReceiveProps(nextProps) {\n    var rawFieldVal\n    // if errors changed, reset the \"userTouched\" flag and not empty, display\n    // them again. Clear state of modified-since-errors-given\n    if (this.props.errors !== nextProps.errors)\n      this.setState({userTouched: false})\n    // respond to the value being changed outside the input. display the new\n    // value if it has changed.\n    rawFieldVal = _.get(this.props.object, this.props.attr)\n    if (rawFieldVal !== this.state.value)\n      this.setState(this.processValue(rawFieldVal))\n  },\n\n  _valueChanged(newVal) {\n    var val\n    val = this.props.formatter(newVal)\n    this.setState({value: val.parsed, display: newVal})\n    this.formatErrorsChange(null)\n    this.fieldTouched()\n    // only fire onChange if valid. Clear formatting errors\n    if (_.isFunction(this.props.onChange))\n      this.props.onChange(this.props.attr, val.parsed)\n  },\n\n  _onBlur() {\n    var val, display\n    // add any 'required' errors on blur\n    val = this.props.formatter(this.state.display, {required: this.props.required})\n    // if valid, display it as formatted.\n    // if not valid, display the user's invalid text\n    // and add any formatter errors.\n    if (val.valid)\n      display = val.formatted\n    else\n      display = this.state.display\n    this.setState({display: display, formatErrors: val.errors})\n    this.formatErrorsChange(val.errors)\n    if (_.isFunction(this.props.onBlur))\n      this.props.onBlur()\n  },\n\n  formatErrorsChange(newErrors) {\n    this.setState({formatErrors: newErrors})\n    // callback that the error state changed.\n    // Send the new error state. Expects null, [] or ['message'].\n    if (_.isFunction(this.props.onErrorChange))\n      this.props.onErrorChange(this.props.attr, newErrors)\n  },\n\n  fieldTouched() {\n    this.setState({userTouched: true})\n    if (_.isFunction(this.props.onTouch))\n      this.props.onTouch(this.props.attr)\n  },\n\n  getDisplayErrors() {\n    // this.state.formatErrors\n    if (this.state.userTouched)\n      return this.state.formatErrors\n    else\n      return this.props.errors\n  },\n\n  render() {\n    return (\n      <ObsText label={this.props.label} hint={this.props.hint} required={this.props.required}\n        id={this.props.id} value={this.state.display} placeholder={this.props.placeholder}\n        errors={this.getDisplayErrors()} className={this.props.className}\n        onChange={this._valueChanged} onBlur={this._onBlur} />\n    )\n  }\n})\n\nmodule.exports = ObsFormattedText\n"]}