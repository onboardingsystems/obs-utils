{"version":3,"sources":["form-builder.js","form.js","formatted-text.js"],"names":[],"mappings":"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","file":"dist/forms/form.js","sourcesContent":["const React             = require('react')\nconst ReactDOM          = require('react-dom')\nconst _                 = require('lodash')\nconst cx                = require('classnames')\nconst ObsForm           = require('./form')\nconst ObsLabel          = require('./label')\nconst ObsError          = require('./error')\nconst ObsTextarea       = require('./textarea')\nconst ObsFormattedText  = require('./formatted-text')\nconst ObsCheckbox       = require('./checkbox')\nconst ObsCompoundLayout = require('./compound-layout')\nconst ObsAddressUs      = require('./address-us')\nconst Formatters        = require('../formatters/formatters')\n\n\n// Expected errors format.\n// errors: {\n//   \"person.name.first\": ['Bad name']\n//   \"address.state\": ['is required']\n// }\n\n\nconst FormBuilder = {\n\n  new(object, errors, options={}) {\n    var data = {\n      object,\n      errors,\n      onValueChange: options.onValueChange,\n      onErrorChange: options.onErrorChange,\n      onTouch:       options.onTouch,\n      // return if the form builder form is valid\n      isValid() { return_.isEmpty(this.errors) },\n      // set the value for the attribute name.\n      set(attrName, value) {\n        _.set(this.object, attrName, value)\n        if (_.isFunction(this.onValueChange))\n          this.onValueChange(this.object)\n      },\n      // get the value for the attribute name.\n      get(attrName) {\n        return _.get(this.object, attrName)\n      }\n    }\n\n    return _.extend({}, data, Components)\n  }\n}\n\n\nconst Components = {\n\n  // alias Obs components to make using them easier\n  form: ObsForm,\n  compoundLayout: ObsCompoundLayout,\n  label: ObsLabel,\n\n  textareaField(label, attrName, options={}) {\n    return (\n      <ObsTextarea label={label} hint={options.hint} required={options.required}\n        value={this.get(attrName)} rows={options.rows}\n        className={options.className} id={options.id}\n        onChange={_.bind(this._onChange, this, options, attrName)}\n        placeholder={options.placeholder} errors={this._getErrors(attrName)} />\n    )\n  },\n\n  formattedField(label, attrName, formatterFun, options={}) {\n    return (\n      <ObsFormattedText label={label} hint={options.hint} required={options.required}\n        object={this.object} errors={this._getErrors(attrName)} attr={attrName} formatter={formatterFun}\n        className={options.className} id={options.id}\n        onChange={_.bind(this._onChange, this, options)}\n        onTouch={_.bind(this._fieldTouched, this)}\n        onErrorChange={_.bind(this._formatErrorChanged, this)}\n        placeholder={options.placeholder} />\n    )\n  },\n\n  checkboxField(label, attrName, options={}) {\n    var options = this._mergeClasses(options, 'obs-checkbox')\n    return (\n      <ObsCheckbox label={label} hint={options.hint} required={options.required}\n        value={!!this.get(attrName)} errors={this._getErrors(attrName)}\n        className={options.className} id={options.id}\n        onChange={_.bind(this._onChange, this, options, attrName)}\n        onTouch={_.bind(this._fieldTouched, this, attrName)} />\n    )\n  },\n\n  textField(label, attrName, options={}) {\n    return this.formattedField(label, attrName, Formatters.stringFormatter, options)\n  },\n\n  phoneField(label, attrName, options={}) {\n    return this.formattedField(label, attrName, Formatters.phoneFormatter, this._mergeClasses(options, 'obs-phone'))\n  },\n\n  ssnField(label, attrName, options={}) {\n    return this.formattedField(label, attrName, Formatters.ssnFormatter, this._mergeClasses(options, 'obs-ssn'))\n  },\n\n  stateField(label, attrName, options={}) {\n    return this.formattedField(label, attrName, Formatters.stateFormatter, this._mergeClasses(options, 'obs-state'))\n  },\n\n  zipcodeField(label, attrName, options={}) {\n    return this.formattedField(label, attrName, Formatters.zipcodeFormatter, this._mergeClasses(options, 'obs-zipcode'))\n  },\n\n  currencyField(label, attrName, options={}) {\n    return this.formattedField(label, attrName, Formatters.currencyFormatter, this._mergeClasses(options, 'obs-currency'))\n  },\n\n  dollarsField(label, attrName, options={}) {\n    return this.formattedField(label, attrName, Formatters.dollarsFormatter, this._mergeClasses(options, 'obs-dollars'))\n  },\n\n  dateField(label, attrName, options={}) {\n    // merge the requested format option in for the formatter\n    var formatter = function(value, opt) {\n      return Formatters.dateFormatter(value, _.merge({}, opt, {format: options.format}))\n    }\n    return this.formattedField(label, attrName, formatter, this._mergeClasses(options, 'obs-date'))\n  },\n\n  timeField(label, attrName, options={}) {\n    // merge the requested format option in for the formatter\n    var formatter = function(value, opt) {\n      return Formatters.timeFormatter(value, _.merge({}, opt, {format: options.format}))\n    }\n    return this.formattedField(label, attrName, formatter, this._mergeClasses(options, 'obs-time'))\n  },\n\n  ordinalField(label, attrName, options={}) {\n    return this.formattedField(label, attrName, Formatters.ordinalFormatter, this._mergeClasses(options, 'obs-ordinal'))\n  },\n\n  addressField(label, attrName, options={}) {\n    return (\n      <ObsAddressUs label={label} object={this.object} attr={attrName} errors={this.errors}\n        required={options.required} hint={options.hint} className={options.className}\n        onChange={_.bind(this._onChange, this, options)}\n        onErrorChange={_.bind(this._formatErrorChanged, this)}\n        onTouch={_.bind(this._fieldTouched, this)} />\n    )\n  },\n\n  // private-like methods\n\n  _mergeClasses(options, classes) {\n    options['className'] = cx(options['className'], classes)\n    return options\n  },\n\n  _onChange(options, attrName, value) {\n    this.set(attrName, value)\n    // if given an 'onChange' event in the options, fire it after setting the\n    // value on the object. Pass the attrName after the value as it is\n    // \"optional\". For complex inputs, it gives context to which part that\n    // changed (like with an address).\n    if (_.isFunction(options['onChange']))\n      options['onChange'](value, attrName)\n  },\n\n  _formatErrorChanged(attrName, errors) {\n    if (_.isEmpty(errors))\n      delete this.errors[attrName]\n    else\n      this.errors[attrName] = errors\n    if (_.isFunction(this.onErrorChange))\n      this.onErrorChange()\n\n  },\n\n  _fieldTouched(attrName) {\n    // remove any server errors from the list if the field was touched.\n    delete this.errors[attrName]\n    if (_.isFunction(this.onTouch))\n      this.onTouch(attrName)\n    if (_.isFunction(this.onErrorChange))\n      this.onErrorChange()\n  },\n\n  _getErrors(attrName) {\n    return this.errors[attrName]\n  }\n}\n\nmodule.exports = FormBuilder\n","const React = require('react')\n\nconst ObsForm = React.createClass({\n  propTypes: {\n    onSubmit: React.PropTypes.func\n  },\n\n  getDefaultProps() {\n    return {\n      onSubmit: this.blockManualSubmit\n    }\n  },\n\n  blockManualSubmit(e) {\n    e.preventDefault()\n    // don't do anything here. prevent hitting \"ENTER\" from reloading the form.\n  },\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.props.onSubmit}>\n        {this.props.children}\n      </form>\n    )\n  }\n})\n\nmodule.exports = ObsForm\n","const React = require('react')\nconst cx    = require('classnames')\nconst _     = require('lodash')\n\nconst ObsText = require('./text')\n\nconst ObsFormattedText = React.createClass({\n  propTypes: {\n    object:       React.PropTypes.object.isRequired,\n    attr:         React.PropTypes.string.isRequired,\n    onChange:     React.PropTypes.func,\n    formatter:    React.PropTypes.func.isRequired,\n    onErrorChange:React.PropTypes.func,\n    // field was \"touched\" by user. Requires a change.\n    onTouch:      React.PropTypes.func,\n    errors:       React.PropTypes.array,\n    label:        React.PropTypes.string,\n    hint:         React.PropTypes.string,\n    required:     React.PropTypes.bool,\n    placeholder:  React.PropTypes.string,\n    className:    React.PropTypes.string,\n    id:           React.PropTypes.string,\n  },\n\n  getDefaultProps() {\n    return {\n      required: false,\n      errors:   []\n    }\n  },\n\n  getInitialState() {\n    return _.merge(this.processValue(_.get(this.props.object, this.props.attr)), {userTouched: false})\n  },\n\n  processValue(value) {\n    var val\n    val = this.props.formatter(value)\n    return {\n      value:        val.parsed,\n      formatted:    val.formatted,\n      display:      val.formatted,\n      formatErrors: val.errors\n    }\n  },\n\n  componentDidMount() {\n    // re-assign the same errors, so it will fire the callback. Inform\n    // parent/subscriber that there are initial state formatting errors. No\n    // state actually changes.\n    if (!_.isEmpty(this.state.formatErrors))\n      this.formatErrorsChange(this.state.formatErrors)\n  },\n\n  componentWillReceiveProps(nextProps) {\n    var rawFieldVal\n    // if errors changed, reset the \"userTouched\" flag and not empty, display\n    // them again. Clear state of modified-since-errors-given\n    if (this.props.errors !== nextProps.errors)\n      this.setState({userTouched: false})\n    // respond to the value being changed outside the input. display the new\n    // value if it has changed.\n    rawFieldVal = _.get(this.props.object, this.props.attr)\n    if (rawFieldVal !== this.state.value)\n      this.setState(this.processValue(rawFieldVal))\n  },\n\n  _valueChanged(newVal) {\n    var val\n    val = this.props.formatter(newVal)\n    this.setState({value: val.parsed, display: newVal})\n    this.formatErrorsChange(null)\n    this.fieldTouched()\n    // only fire onChange if valid. Clear formatting errors\n    if (_.isFunction(this.props.onChange))\n      this.props.onChange(this.props.attr, val.parsed)\n  },\n\n  _onBlur() {\n    var val, display\n    // add any 'required' errors on blur\n    val = this.props.formatter(this.state.display, {required: this.props.required})\n    // if valid, display it as formatted.\n    // if not valid, display the user's invalid text\n    // and add any formatter errors.\n    if (val.valid)\n      display = val.formatted\n    else\n      display = this.state.display\n    this.setState({display: display, formatErrors: val.errors})\n    this.formatErrorsChange(val.errors)\n    if (_.isFunction(this.props.onBlur))\n      this.props.onBlur()\n  },\n\n  formatErrorsChange(newErrors) {\n    this.setState({formatErrors: newErrors})\n    // callback that the error state changed.\n    // Send the new error state. Expects null, [] or ['message'].\n    if (_.isFunction(this.props.onErrorChange))\n      this.props.onErrorChange(this.props.attr, newErrors)\n  },\n\n  fieldTouched() {\n    this.setState({userTouched: true})\n    if (_.isFunction(this.props.onTouch))\n      this.props.onTouch(this.props.attr)\n  },\n\n  getDisplayErrors() {\n    // this.state.formatErrors\n    if (this.state.userTouched)\n      return this.state.formatErrors\n    else\n      return this.props.errors\n  },\n\n  render() {\n    return (\n      <ObsText label={this.props.label} hint={this.props.hint} required={this.props.required}\n        id={this.props.id} value={this.state.display} placeholder={this.props.placeholder}\n        errors={this.getDisplayErrors()} className={this.props.className}\n        onChange={this._valueChanged} onBlur={this._onBlur} />\n    )\n  }\n})\n\nmodule.exports = ObsFormattedText\n"]}