{"version":3,"sources":["checkbox.js"],"names":[],"mappings":";;AAAA,IAAM,QAAQ,QAAQ,OAAR,CAAR;AACN,IAAM,KAAQ,QAAQ,YAAR,CAAR;AACN,IAAM,IAAQ,QAAQ,QAAR,CAAR;;AAEN,IAAM,WAAoB,QAAQ,SAAR,CAApB;AACN,IAAM,oBAAoB,QAAQ,mBAAR,CAApB;AACN,IAAM,UAAoB,QAAQ,QAAR,CAApB;;AAEN,IAAM,cAAc,MAAM,WAAN,CAAkB;;;AACpC,aAAW;AACT,WAAc,MAAM,SAAN,CAAgB,IAAhB;AACd,cAAc,MAAM,SAAN,CAAgB,IAAhB;AACd,WAAc,MAAM,SAAN,CAAgB,MAAhB;AACd,UAAc,MAAM,SAAN,CAAgB,MAAhB;AACd,cAAc,MAAM,SAAN,CAAgB,IAAhB;AACd,eAAc,MAAM,SAAN,CAAgB,MAAhB;AACd,QAAc,MAAM,SAAN,CAAgB,MAAhB;AACd,YAAc,MAAM,SAAN,CAAgB,KAAhB;AARL,GAAX;;AAWA,8CAAkB;AAChB,WAAO;AACL,gBAAU,KAAV;AACA,cAAU,EAAV;KAFF,CADgB;GAZkB;AAmBpC,8CAAkB;AAChB,WAAO;AACL,eAAS,KAAK,KAAL,CAAW,KAAX;KADX,CADgB;GAnBkB;AAyBpC,wCAAc,GAAG;AACf,SAAK,QAAL,CAAc,EAAC,SAAS,EAAE,MAAF,CAAS,OAAT,EAAxB,EADe;AAEf,QAAI,EAAE,UAAF,CAAa,KAAK,KAAL,CAAW,QAAX,CAAjB,EACE,KAAK,KAAL,CAAW,QAAX,CAAoB,EAAE,MAAF,CAAS,OAAT,CAApB,CADF;AAEA,QAAI,EAAE,UAAF,CAAa,KAAK,KAAL,CAAW,OAAX,CAAjB,EACE,KAAK,KAAL,CAAW,OAAX,GADF;GA7BkC;AAiCpC,4BAAS;AACP,QAAI,gBAAJ,CADO;AAEP,uBAAmB,GAAG;AACpB,kBAAY,IAAZ;AACA,mBAAc,CAAC,EAAE,OAAF,CAAU,KAAK,KAAL,CAAW,MAAX,CAAX;KAFG,CAAnB,CAFO;;AAOP,WACE;;QAAK,WAAW,KAAK,KAAL,CAAW,SAAX,EAAhB;MACE;;UAAK,WAAW,gBAAX,EAAL;QACE;;;UACE,+BAAO,MAAK,UAAL,EAAgB,IAAI,KAAK,KAAL,CAAW,EAAX,EAAe,SAAS,KAAK,KAAL,CAAW,OAAX,EAAoB,UAAU,KAAK,aAAL,EAAjF,CADF;UAEG,KAAK,KAAL,CAAW,KAAX;UACD,oBAAC,iBAAD,IAAmB,UAAU,KAAK,KAAL,CAAW,QAAX,EAA7B,CAHF;SADF;QAME,oBAAC,QAAD,IAAU,QAAQ,KAAK,KAAL,CAAW,MAAX,EAAlB,CANF;OADF;MASE,oBAAC,OAAD,IAAS,MAAM,KAAK,KAAL,CAAW,IAAX,EAAf,CATF;KADF,CAPO;GAjC2B;CAAlB,CAAd;;AAwDN,OAAO,OAAP,GAAiB,WAAjB","file":"dist/forms/checkbox.js","sourcesContent":["const React = require('react')\nconst cx    = require('classnames')\nconst _     = require('lodash')\n\nconst ObsError          = require('./error')\nconst ObsRequiredMarker = require('./required-marker')\nconst ObsHint           = require('./hint')\n\nconst ObsCheckbox = React.createClass({\n  propTypes: {\n    value:        React.PropTypes.bool,\n    onChange:     React.PropTypes.func,\n    label:        React.PropTypes.string,\n    hint:         React.PropTypes.string,\n    required:     React.PropTypes.bool,\n    className:    React.PropTypes.string,\n    id:           React.PropTypes.string,\n    errors:       React.PropTypes.array   // array of strings\n  },\n\n  getDefaultProps() {\n    return {\n      required: false,\n      errors:   []\n    }\n  },\n\n  getInitialState() {\n    return {\n      checked: this.props.value\n    }\n  },\n\n  _valueChanged(e) {\n    this.setState({checked: e.target.checked})\n    if (_.isFunction(this.props.onChange))\n      this.props.onChange(e.target.checked)\n    if (_.isFunction(this.props.onTouch))\n      this.props.onTouch()\n  },\n\n  render() {\n    var bootstrapClasses\n    bootstrapClasses = cx({\n      \"checkbox\": true,\n      \"has-error\":  !_.isEmpty(this.props.errors)\n    })\n\n    return (\n      <div className={this.props.className}>\n        <div className={bootstrapClasses}>\n          <label>\n            <input type=\"checkbox\" id={this.props.id} checked={this.state.checked} onChange={this._valueChanged} />\n            {this.props.label}\n            <ObsRequiredMarker required={this.props.required} />\n          </label>\n          <ObsError errors={this.props.errors} />\n        </div>\n        <ObsHint hint={this.props.hint} />\n      </div>\n    )\n  }\n})\n\nmodule.exports = ObsCheckbox\n"]}